name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23.0'  # Use the version of Go you need

    - name: Build binaries for multiple platforms
      run: |
        mkdir -p build
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -trimpath" -o build/awswhoiam_linux_amd64 ./main.go
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -trimpath" -o build/awswhoiam_windows_amd64.exe ./main.go
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -trimpath" -o build/awswhoiam_darwin_amd64 ./main.go

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automated release of version ${{ github.ref }}.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/awswhoiam_linux_amd64
        asset_name: awswhoiam_linux_amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/awswhoiam_windows_amd64.exe
        asset_name: awswhoiam_windows_amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/awswhoiam_darwin_amd64
        asset_name: awswhoiam_darwin_amd64
        asset_content_type: application/octet-stream
